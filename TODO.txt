2022-02-11
It is possible that all the forms should have been created as classes, instead of whatever I did to make 
things work. I plead complete ignorance of the framework. :) At any rate, I need to investigate further,
and see if I can determine the original intent of the framework authors.

It appears that I somehow made this app work without having any real idea what I was doing. The concept of
having classes that do the work, rather than building a more or less random mishmash of ui code mixed with
db code, was beyond my comprehension at the time I wrote the app. No wonder, as I really had no clue about
objects and what they were supposed to be used for in 2012! It is a wonder that this code ever worked at all!

The ui stuff appears to be ok, although I need to strip out the SQL stuff and put it in the db classes that
I will have to write. I am not sure it is worth the effort, as I will need to create a totally new webapp
in the near future if I am going to have any hope of saving the development of the app.  At this point it would
be a tremendous effort to explain this code to anyone, much less have someone who is not versed in dabo come 
in cold to make changes. I think writing a new app, using things like SQLAlchemy to handle the DB stuff, could be
the best use of my time. I think I can mkae the changes that have been requested, and then I need to start
a new project. The only saving grace of redoing the DB stuff in dabo would be if it would significantly 
improve the clarity of the code, to the point that someone else could maintain the current app. It might reduce 
the fragility of the code, but that would have to be proven, and I am not sure how to do that without rewriting
all the DB code. An alternative to writing dabo DB code that would be thrown out with a new version would be to
write the necessary DB code in something that could be moved to a new app. That would be complicated by the
necessity of writing the DB code with Python 2, and then trying to port that code to the new Python 3 app.

==========
Priority 1, highest of the high!

WORKAROUND -- Forms retrieve at most 1000 records at a time.  Currently there is no way to get the rest.  Need to
find out how to deal with datasets or frames. This is a basic requirement of DB apps, and I really need
to understand how this works.

This has been changed to return ALL records. It is okay with Monrovia's 11,000+ records, but for really large databases
this would not be practical.  While it needs to be fixed, it is now a lower priority.

==========
Requirements.txt file needs to be populated with ALL the requirements necessary to run the app from 
source, as well as compile the program to an executable for Windows. While in theory it is possible to
run the program from the source on Mac and Linux, I do not have a working solution for packaging the app
for those platforms. It is very likely that this will never happen, as the application is using too many
tools that are no longer supported in Python 2 because Python 2 is EOL, and there is no interest on the part of
either myself or the providers of the tools to make them work with Python 2. The only users requesting 
the application on the MacOS were from Mayfair, and they had indicated several years ago that they were going to have to 
migrate to another application, because they did not have the ability to make changes to my code.
The reason for updating the requirements file is to make it relatively simple to recreate the environment
needed for further modification of the application. In addition to the requirements file, I need to gather
and store in Git the files necessary to build said environment. Many of the tools have been updated well
past the versions that work with the others, ie. the dabo framwork and Python 2.7.6. I know for a fact
that later versions of Python, including 2.7.9, are NOT compatible.

==========
AWE 2022-22-2
If you delete a Grade record, the program should first check to see if there is a related Attachment, and if so, possibly
delete it.  Need to check with the user on this. There are two scenarios. One is just deleting a Grade record manually from
the GUI (in Students form or from the table view) The second is overwriting an existing Grade record, which happens if
the new record and the existing record are for the same lesson. I would think we would want the Attachment to be deleted, 
and only keep the new one, but the users will have the final say.

==========
Current user requests as of 2022-02-11:

1. Occupation field does not allow anything but "student" (from the dropdown).
    We need to allow entering of other occupations, or add some to the dropdown list,
    such as farmer, teacher, doctor, nurse, businessman, and businesswoman.
    
    --This was discussed years ago, and the decision was made to add fields as requested by the
    users, as I did not know how, in code, to add things to the dropdown list. As I recall, the list is
    retrieved from the DB, so adding should be done by adding a new record. At least, that is how these 
    types of things *should* operate. For now, the users need to provide a list, and then have an option of
    typing in another value that it no in said list.  It should be possible to add that to the DB, if indeed that is
    where the list comes from.  If it is possible to do that, it should be possible to fully implement this.
    Currently the contacts and teachers are stored in the DB, but I may be pulling info from the Contacts and Teachers tables.
    --2022-02-13 ETA It is indeed using those table.  This is okay for those, as the tables are tiny, but for the occupation, etc., lists,
    I will need to add tables, and edit forms for them, so the app is not trying to get all the unique occupations
    from the DB every time it needs to make a dropdown. At least I have examples of how to do these operations.

2. DONE! 2022-02-19 AWE - Age field defaults to "0". This field needs to be blank if we have no age.
    --Agreed. However, we had issues with this, and were unable to determine what to do. This does not
    seem like a field that should not allow nulls, but I am unsure whether the framework allows display
    of null values. If it returns null, it should be possible to display a "-" or something as a way of
    indicating that we do not know. --2022-02-13 ETA - This is a limitation of the spin control, or at least my understanding of it.
    It is set up to only allow numeric values, so it had been decided long ago that a 0 was preferable to other numbers
    if the age is unknown.  After some investigation of the dSpinner class, I have verified that anything other than a numeric
    value will not be desiplayed. The DB code stores nulls, but the control will not allow them, so null = 0.  Since this is a
    limitation imposed by the framework, the only real solution is to replace dSpinner with another control.

3. OBSOLETE -- BirthDate field removed for StudentsForm 2022-02-19 AWE - user indicated that they do not use this information.  
    Need to remove field from Student form. Birthday does not save.--this seems odd, as I recall trying to convince people that
    age could be computed if the DOB was provided, which would stay up to date as the student aged. However, this seems to have saved to the DOB
    in the past, so I do not understand why it would have changed. -- 2022-02-13 ETA - The code seems to work. 
    Will check with users on this, as entering a date manually or selecting from the calendar popup both work for me
    assuming the date is valid.

4. DONE! 2022-02-19 - Numbers below 10 should be spelled (In comments sent back to students).
    --An interesting challenge. Not that it should be difficult necessarily to implement.  Numbers
    generated by program code should be simply to convert to text, it is simply that I have not tried to
    do anything like this before. --2022-02-13 ETA - This is more complex, as the code outputting the numbers is 
    hard to find.  With the various forms and classes of dabo, and all the formatting that has to be included
    for reportlab, this will take some time. Also, the code will have to differentiate numbers that should be text, 
    and numbers that are just numbers. This may not be difficult, but needs to be addressed.

5. After saving a new student record, a default page shows instead of the page which was saved. 
    This is an intermittent problem that seldom happens. It might be related to the problem we just had,
    since the default page was the same in both cases.
    --testing will need to be done to determine whether this is still a problem. If so, it may be caused
    by the framework. There is a requery function that I call after saving a record, and I will have to 
    see whether that is causing this problem. It should be simple to get rid of the requery in favor of
    calling the save, then doing a query to bring up the current record, simply by getting some 
    identifying information As I recall, the problem started out as one in which the code was not 
    provided a record number until after the information was saved. This may not be simple to deal with,
    but it is a common enough problem that I should be able to find an existing solution. Every DB 
    application would, I would think, have the same "chicken and egg" problem--how can I get the next 
    available record number before creating the next record?

DONE(once upon a time, need to revisit this problem. 2022-02-11) - New Student does not work if Lookup has been used
    -- note: I wonder if the problem when creating a new student is related to this? It would seem that
    the problems would be related, and if I fixed this one, I may have broken the other, and possibly 
    only for specific situations?

==========
When a student name is added or changed, the duplicate name search should ONLY happen when there is both
a FirstName and a LastName in the current record. When adding students for the first time, the check is
run when EITHER FirstName or LastName is entered. This creates a list with potentially VAST numbers of 
matches! 2022-02-15 EDIT When a name is entered in one field, the code throws an error and fails to save. 
returnCode is None is not the only thing to check!
================================================================
To delete a student, you must first get rid of all the grade records belonging to the student, then
delete the student record.
==========

StudentID on reports should be Student ID
==========

DONE! Captions on the program windows should reflect the database in use, or the username, or somehow
differentiate the connection in use.

==========
PARTIALLY DONE.  DDeleting a Contact works, if the Contact is not associated with any students.  The
same will apply to Teachers.  If they ARE associated, the program will need to set the
associated records to point to someone else, or delete them.

Deleting a contact not working - foreign key failure because records existed pointing 
to that contact. Need to inform the user when either a Teacher or a Contact is being deleted, and records exist pointing
to that person. Ask user who to point those records to instead, update the records, then delete.
The best thing might be to require the user to delete or re-point Student records before removing a Contact or
Teacher.  However, the possibility also exists to have the program automatically point
affected Student records to the default Contact or Teacher, which is always record 1,
and the name fields are blank.  Need to discuss this with the users to determine how
they would like to handle this situation.  -- Need to default students that are affected and print
a list so the admins know who was affected by the change.

==========
Many save() functions were enclosed in try/except blocks, which is fine, but at the same time
dialogs with status messages were put in to alert the user.  Many of them have output
that does not match the message string, which is confusing enough, but some, like 
when the user selects a Contact after getting the message that one is necessary before
grading, don't seem to work correctly.  The contact is saved, the result = True instead of 
None as the message would indicate, and the user still cannot grade.  Apparently the 
form is not being refreshed?  PARTIAL - form now updates correctly, but messages are still confusing.


==========
Comment area needs to be a defined space.  The answers can only go up to 30 items, because if we 
have more than that it is a failure.  Since the headers are a known size, and the max size of the 
answer data can be determined, whatever space is left will be allocated for comments.  Somehow we 
need to define the remaining space, so that the users know how much space they have remaining.

==========
PDFs are now saved into the Attachments table in the DB.  Need to get the Attachments form
working so users can view the files associated with a student.

==========
Fields that should be dropdowns with the ability to choose something that is not in the list:

Occupation - student
Religion - Christian/Islamic (add Jewish, at least)
Church Name?  Pentecostal, Roman Catholic, Baptist, Lutheran, CofC
Country - Tanzania
City - Arusha, Mbeya

==========
Default buttons:

Print or Preview - Print
Lesson Selector - Select
Lookup - Lookup


+++++++++++++++++++++++++++++++++++++++++++++++++++
Completed changes
+++++++++++++++++++++++++++++++++++++++++++++++++++
DONE! 
The save() function in AnswerForm is trying to save the Lessons table, which should NOT happen.
It should only save data to the Answers table!!

DONE! - The first name on graded lesson should be only the string up to the first space in the
first name field.- DONE

DONE! Choose comments - save list, edits done on grading form, convert data to print format on
print

DONE! standard blurb for Intro - DONE

DONE! first save should confirm - DONE

DONE! pre-build boxes for grading forms - DONE, forms now use wx.CheckBox instead of dabo dCheckBox

DONE! Gender field should be a dropdown - DONE

DONE! Age should be blank if age in db = 0 - DONE - null is now default for Age and BirthDate

DONE! grading form answer box should be larger - DONE

DONE! 'wrong answers' checkbox should be checked by default - DONE

DONE! Teacher and Contact should be verified after pressing the Grade Lesson button befoe the form 
is displayed to choose a lesson.  No Teacher, No Contact, No Grading! - DONE

DONE! string substitution on comments should happen on the Comments form - DONE

DONE - Comments button should be disabled until Score has been computed, so that the number of missed
questions will be available to the Comments form for string substitution

DONE - rearrange buttons on the Students form, grouping them by similar function

DONE! new student data - tab order - DONE

DONE! duplicate name check when changing name on student record - DONE

Teacher/Contact dropdowns should sort alpha by last name - DONE

remove 'Has done WBS before?' from grading sheets - DONE

If a lookup finds no records, pop up a dialog to inform the user - DONE

Add Failed/Incomplete function - DONE

DONE! Can Contacts and Teachers forms be Modal?  -- not currently, as they run from the menu, and I have
not found a way to set the Modal option.  Perhaps I should create a 'maintenance' dialog that has buttons for
the db forms, and open that from the menu.  It could have buttons to select the table you want, and open the
forms in Modal so you have to close them to continue.  Since the maintenance dialog would be modal as well,
when it is closed the Students form could update the controls to get any changes.  Or, if there is a way to
open a form in Modal from a menu, do that.  Either way, we need to notify the Students form when changes
are made to the Teachers or Contacts table, so it can refresh the controls. - DONE!  Right-clicking
on the Contacts or Teachers field will bring up the relevant form, from which the user
can add or delete entries.  The forms are Modal, so the user must close them to continue.
When they close, the StudentsForm knows about it, and updates the relevant field.  This is
all possible because StudentsForm is calling the other forms directly, rather than the
menu, which is not part of the form itself, calling the form.  When the menu does it,
the form does not know about it, and so cannot update itself when the form is closed.

TIGN - two possible sets of numbers for questions on grading form/output. DONE

Grades form should show student name instead of rec_no, and lesson short name instead of lesson_rec_no - DONE

Write to DB not working on GradingForm - DONE

==========
DONE! Need to create styles for the table output on the PDF
==========
DONE! - Temporary files should be deleted! -- There is now a TMP directory created in the program 
directory that is used for creating PDF files.  That directory is emptied of PDF files when the 
program exits.

==========
OBSOLETE - Data converted manually for both Monrovia and Mayfair's Nigeria DB.
Can I create a form in the application that will read in data from the Access DB and save it to 
the MySQL DB?  That would be a nice way to migrate.  The old programs for Access have everything
needed to fetch the data, and this one has everything to write to MySQL.  If a form could load the
Access data by using the old code, then Dabo could be used to save the data to the new DB.

==========
DONE!  Reset Form is not resetting all the controls on grading form

==========
DONE! Test score with decimal.   Always an int

==========
DONE! - PDF - save only works once.  Trying to save again fails because it creates a duplicate
filename.

==========
DONE! Can answer table be broken into two columns?  If it is too long, it needs to wrap.
Something needs to keep the questions from taking up too much vertical space.  Anything that
can cut down on vertical space should be considered.

==========
DONE! On the GradingForm, the boxes should be broken up into sections by lesson number


